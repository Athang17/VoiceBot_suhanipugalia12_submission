// import React from 'react';
// import { jsPDF } from 'jspdf';

// const ConversationSummary = ({ messages = [], darkMode = false, activeLanguage = 'en' }) => {
//   // Safe message processing with fallbacks
//   const generateSummary = () => {
//     if (!Array.isArray(messages) || messages.length === 0) {
//       return activeLanguage === 'hi' ? 'कोई संदेश नहीं' : 'No messages available';
//     }

//     return messages
//       .filter(msg => msg?.sender !== 'system') // Optional chaining
//       .map(msg => {
//         const sender = msg?.sender === 'user' 
//           ? (activeLanguage === 'hi' ? 'आप' : 'You') 
//           : (activeLanguage === 'hi' ? 'सहायक' : 'Assistant');
//         return `${sender} (${msg?.timestamp || '--:--'}): ${msg?.text || ''}`;
//       })
//       .join('\n\n');
//   };

//   const exportToPDF = () => {
//     try {
//       const doc = new jsPDF();
//       const date = new Date().toLocaleString();
//       const margin = 15;
//       const lineHeight = 7;
//       let yPosition = margin;

//       // Set document properties
//       doc.setProperties({
//         title: 'Conversation Summary',
//         subject: 'Chat conversation export',
//         author: 'Chat App',
//         keywords: 'conversation, chat, export',
//         creator: 'Chat App'
//       });

//       // Add title
//       doc.setFontSize(16);
//       doc.setFont('helvetica', 'bold');
//       doc.setTextColor(40, 40, 40);
//       doc.text(`Conversation Summary - ${date}`, margin, yPosition);
//       yPosition += lineHeight * 1.5;

//       // Add divider line
//       doc.setDrawColor(200, 200, 200);
//       doc.line(margin, yPosition, 200 - margin, yPosition);
//       yPosition += lineHeight;

//       // Set body text style
//       doc.setFontSize(12);
//       doc.setFont('helvetica', 'normal');
//       doc.setTextColor(80, 80, 80);

//       // Process conversation text with proper formatting
//       const conversationText = generateSummary();
      
//       // Handle empty conversation case
//       if (!conversationText.trim()) {
//         doc.text(activeLanguage === 'hi' ? 'निर्यात करने के लिए कोई संदेश नहीं' : 'No messages to export', 
//                 margin, yPosition);
//       } else {
//         const splitText = doc.splitTextToSize(conversationText, 180 - (2 * margin));

//         // Add conversation content with sender-based formatting
//         splitText.forEach(line => {
//           // Check if we need a new page
//           if (yPosition > 280) {
//             doc.addPage();
//             yPosition = margin;
//           }

//           // Style differently based on sender
//           if (line.startsWith('You') || line.startsWith('आप')) {
//             doc.setTextColor(0, 102, 204); // Blue for user
//           } else if (line.startsWith('Assistant') || line.startsWith('सहायक')) {
//             doc.setTextColor(204, 0, 0); // Red for assistant
//           } else {
//             doc.setTextColor(80, 80, 80); // Default gray
//           }

//           doc.text(line, margin, yPosition);
//           yPosition += lineHeight;
//         });
//       }

//       // Add footer
//       doc.setFontSize(10);
//       doc.setTextColor(150, 150, 150);
//       doc.text('Generated by Chat App', margin, 285, { align: 'left' });
//       doc.text(`Page 1 of ${doc.internal.getNumberOfPages()}`, 200 - margin, 285, { align: 'right' });

//       // Save the PDF
//       doc.save(`conversation_summary_${date.replace(/[/,:]/g, '_')}.pdf`);
//     } catch (error) {
//       console.error('Failed to generate PDF:', error);
//       alert(activeLanguage === 'hi' 
//         ? 'PDF बनाने में त्रुटि हुई' 
//         : 'Error generating PDF');
//     }
//   };

//   return (
//     <div className={`p-3 rounded-lg shadow mt-4 ${darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-800'}`}>
//       <button
//         onClick={exportToPDF}
//         className={`w-full py-2 px-4 rounded-lg font-medium ${
//           darkMode ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-500 hover:bg-blue-600'
//         } text-white transition-colors duration-200`}
//         disabled={!messages || messages.length === 0}
//       >
//         {activeLanguage === 'hi' ? 'PDF निर्यात करें' : 'Export as PDF'}
//       </button>
//       {(!messages || messages.length === 0) && (
//         <p className="text-xs mt-2 text-center text-gray-500">
//           {activeLanguage === 'hi' ? 'निर्यात करने के लिए कोई संदेश नहीं' : 'No messages to export'}
//         </p>
//       )}
//     </div>
//   );
// };

// export default ConversationSummary;

// components/ConversationSummary.js
import React from 'react';
import { jsPDF } from 'jspdf';

/**
 * Component to export conversation history as PDF
 * @param {Object} props - Component props
 * @param {Array} props.messages - Array of chat messages
 * @param {boolean} props.darkMode - Dark mode toggle
 * @param {string} props.activeLanguage - Current active language ('en' or 'hi')
 */
const ConversationSummary = ({ messages = [], darkMode = false, activeLanguage = 'en' }) => {
  // [CHANGE 1] Enhanced message processing with better fallbacks and validation
  const generateSummary = () => {
    if (!Array.isArray(messages) || messages.length === 0) {
      return '';
    }

    return messages
      .filter(msg => msg?.sender && msg.sender !== 'system')
      .map(msg => {
        const sender = msg.sender === 'user' 
          ? (activeLanguage === 'hi' ? 'आप' : 'You') 
          : (activeLanguage === 'hi' ? 'सहायक' : 'Assistant');
        
        // [CHANGE 2] Better timestamp formatting
        const timestamp = msg.timestamp 
          ? new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })
          : '--:--';
          
        return `${sender} (${timestamp}): ${msg.text || ''}`;
      })
      .join('\n\n');
  };

  // [CHANGE 3] Improved PDF generation with better error handling
  const exportToPDF = () => {
    try {
      const doc = new jsPDF();
      const date = new Date().toLocaleString();
      const margin = 15;
      const lineHeight = 7;
      let yPosition = margin;

      // Document metadata
      doc.setProperties({
        title: 'Conversation Summary',
        subject: 'Chat conversation export',
        author: 'Voice Assistant App',
        keywords: 'conversation, chat, export',
        creator: 'Voice Assistant App'
      });

      // Title section
      doc.setFontSize(16);
      doc.setFont('helvetica', 'bold');
      doc.setTextColor(40, 40, 40);
      doc.text(`Conversation Summary - ${date}`, margin, yPosition);
      yPosition += lineHeight * 1.5;

      // Divider line
      doc.setDrawColor(200, 200, 200);
      doc.line(margin, yPosition, 200 - margin, yPosition);
      yPosition += lineHeight;

      // Body content
      doc.setFontSize(12);
      doc.setFont('helvetica', 'normal');
      
      const conversationText = generateSummary();
      
      if (!conversationText.trim()) {
        // [CHANGE 4] Better empty state handling
        doc.setTextColor(150, 150, 150);
        doc.text(
          activeLanguage === 'hi' 
            ? 'कोई वार्तालाप डेटा नहीं मिला' 
            : 'No conversation data found', 
          margin, yPosition
        );
      } else {
        const splitText = doc.splitTextToSize(conversationText, 180 - (2 * margin));

        splitText.forEach(line => {
          if (yPosition > 280) {
            doc.addPage();
            yPosition = margin;
          }

          // [CHANGE 5] Improved sender-based formatting
          if (line.startsWith('You') || line.startsWith('आप')) {
            doc.setTextColor(0, 102, 204); // User - blue
          } else if (line.startsWith('Assistant') || line.startsWith('सहायक')) {
            doc.setTextColor(204, 0, 0); // Assistant - red
          } else {
            doc.setTextColor(80, 80, 80); // Default - dark gray
          }

          doc.text(line, margin, yPosition);
          yPosition += lineHeight;
        });
      }

      // Footer
      doc.setFontSize(10);
      doc.setTextColor(150, 150, 150);
      doc.text('Generated by Voice Assistant App', margin, 285, { align: 'left' });
      
      // [CHANGE 6] Better page numbering
      const pageCount = doc.internal.getNumberOfPages();
      for (let i = 1; i <= pageCount; i++) {
        doc.setPage(i);
        doc.text(`Page ${i} of ${pageCount}`, 200 - margin, 285, { align: 'right' });
      }

      // Save PDF with sanitized filename
      const sanitizedDate = date.replace(/[/,:]/g, '_').replace(/\s/g, '-');
      doc.save(`conversation_summary_${sanitizedDate}.pdf`);
      
    } catch (error) {
      console.error('PDF generation failed:', error);
      alert(
        activeLanguage === 'hi' 
          ? 'PDF निर्यात करने में विफल: कृपया बाद में पुनः प्रयास करें' 
          : 'Export failed: Please try again later'
      );
    }
  };

  // [CHANGE 7] Improved button and empty state UI
  return (
    <div className={`p-3 rounded-lg shadow mt-4 ${darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-800'}`}>
      <button
        onClick={exportToPDF}
        className={`w-full py-2 px-4 rounded-lg font-medium ${
          darkMode ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-500 hover:bg-blue-600'
        } text-white transition-colors duration-200 flex items-center justify-center`}
        disabled={!messages || messages.length === 0}
        aria-label={activeLanguage === 'hi' ? 'PDF निर्यात करें' : 'Export as PDF'}
      >
        <span className="mr-2">📄</span>
        {activeLanguage === 'hi' ? 'PDF निर्यात करें' : 'Export as PDF'}
      </button>
      
      {(!messages || messages.length === 0) && (
        <p className={`text-xs mt-2 text-center ${
          darkMode ? 'text-gray-400' : 'text-gray-500'
        }`}>
          {activeLanguage === 'hi' ? 'निर्यात करने के लिए कोई संदेश नहीं' : 'No messages to export'}
        </p>
      )}
    </div>
  );
};

export default ConversationSummary;